/**
 * Types for the NPM package `@react-native-community/netinfo`.
 *
 * Translated from
 *   node_modules/@react-native-community/netinfo/lib/typescript/src/internal/types.d.ts
 * using Flowgen v1.14.1 with --interface-records
 *
 * @flow strict-local
 */

/**
 * Flowtype definitions for types
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.14.1
 */

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 * @format
 */

 declare export var NetInfoStateType: {|
  +unknown: 'unknown', // "unknown"
  +none: 'none', // "none"
  +cellular: 'cellular', // "cellular"
  +wifi: 'wifi', // "wifi"
  +bluetooth: 'bluetooth', // "bluetooth"
  +ethernet: 'ethernet', // "ethernet"
  +wimax: 'wimax', // "wimax"
  +vpn: 'vpn', // "vpn"
  +other: 'other', // "other"
|};

declare export var NetInfoCellularGeneration: {|
  +'2g': '2g', // "2g"
  +'3g': '3g', // "3g"
  +'4g': '4g', // "4g"
|};
type NetInfoConnectedState<T: $Values<typeof NetInfoStateType>, D: { ... } = { ... }> = {|
  type: T,
  isConnected: true,
  isInternetReachable: boolean | null,
  details: { ...D, isConnectionExpensive: boolean, ... },
  isWifiEnabled?: boolean,
|};
type NetInfoDisconnectedState<T: $Values<typeof NetInfoStateType>> = {|
  type: T,
  isConnected: false,
  isInternetReachable: false,
  details: null,
|};
export type NetInfoUnknownState = {|
  type: typeof NetInfoStateType.unknown,
  isConnected: null,
  isInternetReachable: null,
  details: null,
|};
export type NetInfoNoConnectionState = NetInfoDisconnectedState<
  typeof NetInfoStateType.none, >;
export type NetInfoDisconnectedStates = NetInfoUnknownState | NetInfoNoConnectionState;
export type NetInfoCellularState = NetInfoConnectedState<
  typeof NetInfoStateType.cellular,
  {
    cellularGeneration: $Values<typeof NetInfoCellularGeneration> | null,
    carrier: string | null,
    ...
  }, >;
export type NetInfoWifiState = NetInfoConnectedState<
  typeof NetInfoStateType.wifi,
  {
    ssid: string | null,
    bssid: string | null,
    strength: number | null,
    ipAddress: string | null,
    subnet: string | null,
    frequency: number | null,
    ...
  }, >;
export type NetInfoBluetoothState = NetInfoConnectedState<
  typeof NetInfoStateType.bluetooth, >;
export type NetInfoEthernetState = NetInfoConnectedState<
  typeof NetInfoStateType.ethernet,
  {
    ipAddress: string | null,
    subnet: string | null,
    ...
  }, >;
export type NetInfoWimaxState = NetInfoConnectedState<typeof NetInfoStateType.wimax>;
export type NetInfoVpnState = NetInfoConnectedState<typeof NetInfoStateType.vpn>;
export type NetInfoOtherState = NetInfoConnectedState<typeof NetInfoStateType.other>;
export type NetInfoConnectedStates =
  | NetInfoCellularState
  | NetInfoWifiState
  | NetInfoBluetoothState
  | NetInfoEthernetState
  | NetInfoWimaxState
  | NetInfoVpnState
  | NetInfoOtherState;
export type NetInfoState = NetInfoDisconnectedStates | NetInfoConnectedStates;
export type NetInfoChangeHandler = (state: NetInfoState) => void;
export type NetInfoSubscription = () => void;
export type NetInfoConfiguration = {|
  reachabilityUrl: string,
  reachabilityTest: (response: Response) => Promise<boolean>,
  reachabilityLongTimeout: number,
  reachabilityShortTimeout: number,
  reachabilityRequestTimeout: number,
|};
declare export {};
