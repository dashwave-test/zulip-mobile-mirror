/* @flow
 * @generated by TsFlower
 */
import type {
  ReactNode as $tsflower_subst$React$ReactNode,
  RefAttributes as $tsflower_subst$React$RefAttributes,
} from 'tsflower/subst/react';
import * as TsReact from 'tsflower/subst/react';

import * as React from 'react';
import { type NavigationContainerProps, type NavigationContainerRef } from '@react-navigation/core';
import { type Theme, type LinkingOptions, type DocumentTitleOptions } from './types';

type ForwardRefExoticComponent<P> = React.AbstractComponent<
  $Rest<P, {| ref: mixed |}>,
  $Call<<T>(?TsReact.Ref<T>) => T, $ElementType<P, 'ref'>>,
>;

declare var NavigationContainer: ForwardRefExoticComponent<
  NavigationContainerProps & {
    theme?: Theme | void,
    linking?: LinkingOptions | void,
    fallback?: $tsflower_subst$React$ReactNode,
    documentTitle?: DocumentTitleOptions | void,
    onReady?: () => void | void,
    ...
  } & $tsflower_subst$React$RefAttributes<NavigationContainerRef>,
>;

export default NavigationContainer;
