/* @flow
 * @generated by TsFlower
 */
import type { GetStateListener as $tsflower_import_type$_$_2e__2f_NavigationBuilderContext$GetStateListener } from './NavigationBuilderContext';
import type { ChildBeforeRemoveListener as $tsflower_import_type$_$_2e__2f_NavigationBuilderContext$ChildBeforeRemoveListener } from './NavigationBuilderContext';
import { type KeyedListenerMap } from './NavigationBuilderContext';

declare export default function useKeyedChildListeners(): {
  keyedListeners: {
    getState: {
      [key: string]: $tsflower_import_type$_$_2e__2f_NavigationBuilderContext$GetStateListener | void,
    },
    beforeRemove: {
      [key: string]: $tsflower_import_type$_$_2e__2f_NavigationBuilderContext$ChildBeforeRemoveListener | void,
    },
    ...
  },
  addKeyedListener: <T: 'getState' | 'beforeRemove'>(
    type: T,
    key: string,
    listener: $ElementType<KeyedListenerMap, T>,
  ) => () => void,
  ...
};
