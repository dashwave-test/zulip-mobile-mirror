/* @flow
 * @generated by TsFlower
 */
import {
  typeof getStateFromPath as getStateFromPathDefault,
  typeof getPathFromState as getPathFromStateDefault,
  typeof getActionFromState as getActionFromStateDefault,
  type PathConfigMap,
  type Route,
} from '@react-navigation/core';

export type Theme = {
  dark: boolean,
  colors: {
    primary: string,
    background: string,
    card: string,
    text: string,
    border: string,
    notification: string,
    ...
  },
  ...
};

export type LinkingOptions = {
  enabled?: boolean,
  prefixes: string[],
  config?: {
    initialRouteName?: string,
    screens: PathConfigMap,
    ...
  },
  getInitialURL?: () => string | null | void | Promise<string | null | void>,
  subscribe?: (listener: (url: string) => void) => void | void | (() => void),
  getStateFromPath?: getStateFromPathDefault,
  getActionFromState?: getActionFromStateDefault,
  getPathFromState?: getPathFromStateDefault,
  ...
};

export type DocumentTitleOptions = {
  enabled?: boolean,
  formatter?: (options: { [key: string]: any } | void, route: Route<string> | void) => string,
  ...
};

export type ServerContainerRef = { getCurrentOptions(): { [key: string]: any } | void, ... };
