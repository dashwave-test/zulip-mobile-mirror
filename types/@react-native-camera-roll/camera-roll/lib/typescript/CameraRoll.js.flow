/* @flow
 * @generated by TsFlower
 */
export type GroupTypes =
  | 'Album'
  | 'All'
  | 'Event'
  | 'Faces'
  | 'Library'
  | 'PhotoStream'
  | 'SavedPhotos';
export type Include =
  | 'filename'
  | 'fileSize'
  | 'fileExtension'
  | 'location'
  | 'imageSize'
  | 'playableDuration'
  | 'orientation';
export type AssetType = 'All' | 'Videos' | 'Photos';

export type GetPhotosParams = {
  first: number,
  after?: string,
  groupTypes?: GroupTypes,
  groupName?: string,
  assetType?: AssetType,
  fromTime?: number,
  toTime?: number,
  mimeTypes?: Array<string>,
  include?: Include[],
  ...
};

export type PhotoIdentifier = {
  node: {
    type: string,
    group_name: string,
    image: {
      filename: string | null,
      filepath: string | null,
      extension: string | null,
      uri: string,
      height: number,
      width: number,
      fileSize: number | null,
      playableDuration: number,
      orientation: number | null,
      ...
    },
    timestamp: number,
    location: {
      latitude?: number,
      longitude?: number,
      altitude?: number,
      heading?: number,
      speed?: number,
      ...
    } | null,
    ...
  },
  ...
};

export type PhotoConvertionOptions = { convertHeicImages: boolean, ... };

export type PhotoIdentifiersPage = {
  edges: Array<PhotoIdentifier>,
  page_info: {
    has_next_page: boolean,
    start_cursor?: string,
    end_cursor?: string,
    ...
  },
  limited?: boolean,
  ...
};

export type SaveToCameraRollOptions = {
  type?: 'photo' | 'video' | 'auto',
  album?: string,
  ...
};

export type GetAlbumsParams = { assetType?: AssetType, ... };

export type Album = {
  title: string,
  count: number,
  ...
};

declare export class CameraRoll {
  static GroupTypesOptions: {
    Album: string,
    All: string,
    Event: string,
    Faces: string,
    Library: string,
    PhotoStream: string,
    SavedPhotos: string,
    ...
  };
  static AssetTypeOptions: {
    All: string,
    Videos: string,
    Photos: string,
    ...
  };
  static deletePhotos(photoUris: Array<string>): void;
  static save(tag: string, options?: SaveToCameraRollOptions): Promise<string>;
  static saveToCameraRoll(tag: string, type?: 'photo' | 'video' | 'auto'): Promise<string>;
  static getAlbums(params?: GetAlbumsParams): Promise<Album[]>;
  static getParamsWithDefaults(params: GetPhotosParams): GetPhotosParams;
  static getPhotos(params: GetPhotosParams): Promise<PhotoIdentifiersPage>;
  static iosGetImageDataById(
    internalID: string,
    convertHeicImages?: boolean,
  ): Promise<PhotoIdentifier>;
}
