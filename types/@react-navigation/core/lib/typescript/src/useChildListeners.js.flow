/* @flow
 * @generated by TsFlower
 */
import type { ChildActionListener as $tsflower_import_type$_$_2e__2f_NavigationBuilderContext$ChildActionListener } from './NavigationBuilderContext';
import type { FocusedNavigationListener as $tsflower_import_type$_$_2e__2f_NavigationBuilderContext$FocusedNavigationListener } from './NavigationBuilderContext';
import { type ListenerMap } from './NavigationBuilderContext';

declare export default function useChildListeners(): {
  listeners: {
    action: $tsflower_import_type$_$_2e__2f_NavigationBuilderContext$ChildActionListener[],
    focus: $tsflower_import_type$_$_2e__2f_NavigationBuilderContext$FocusedNavigationListener[],
    ...
  },
  addListener: <T: 'focus' | 'action'>(
    type: T,
    listener: $ElementType<ListenerMap, T>,
  ) => () => void,
  ...
};
