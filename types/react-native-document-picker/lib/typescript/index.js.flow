/* @flow
 * @generated by TsFlower
 */
import type { Readonly } from 'tsflower/subst/lib';
import { type PlatformTypes, type SupportedPlatforms } from './fileTypes';

export type DocumentPickerResponse = {
  uri: string,
  name: string | null,
  copyError?: string,
  fileCopyUri: string | null,
  type: string | null,
  size: number | null,
  ...
};

declare export var types:
  | Readonly<{
      +allFiles: '*/*',
      +audio: 'audio/*',
      +csv: 'text/csv',
      +doc: 'application/msword',
      +docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
      +images: 'image/*',
      +pdf: 'application/pdf',
      +plainText: 'text/plain',
      +ppt: 'application/vnd.ms-powerpoint',
      +pptx: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',
      +video: 'video/*',
      +xls: 'application/vnd.ms-excel',
      +xlsx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
      +zip: 'application/zip',
      ...
    }>
  | Readonly<{
      +allFiles: 'public.item',
      +audio: 'public.audio',
      +csv: 'public.comma-separated-values-text',
      +doc: 'com.microsoft.word.doc',
      +docx: 'org.openxmlformats.wordprocessingml.document',
      +images: 'public.image',
      +pdf: 'com.adobe.pdf',
      +plainText: 'public.plain-text',
      +ppt: 'com.microsoft.powerpoint.ppt',
      +pptx: 'org.openxmlformats.presentationml.presentation',
      +video: 'public.movie',
      +xls: 'com.microsoft.excel.xls',
      +xlsx: 'org.openxmlformats.spreadsheetml.sheet',
      +zip: 'public.zip-archive',
      ...
    }>
  | Readonly<{
      +allFiles: '*',
      +audio: '.3g2 .3gp .aac .adt .adts .aif .aifc .aiff .asf .au .m3u .m4a .m4b .mid .midi .mp2 .mp3 .mp4 .rmi .snd .wav .wax .wma',
      +csv: '.csv',
      +doc: '.doc',
      +docx: '.docx',
      +images: '.jpeg .jpg .png',
      +pdf: '.pdf',
      +plainText: '.txt',
      +ppt: '.ppt',
      +pptx: '.pptx',
      +video: '.mp4',
      +xls: '.xls',
      +xlsx: '.xlsx',
      +zip: '.zip .gz',
      ...
    }>;

export type DirectoryPickerResponse = { uri: string, ... };
export type TransitionStyle = 'coverVertical' | 'flipHorizontal' | 'crossDissolve' | 'partialCurl';

export type DocumentPickerOptions<OS: SupportedPlatforms> = {
  type?:
    | string
    | $Values<$ElementType<PlatformTypes, OS>>
    | Array<$Values<$ElementType<PlatformTypes, OS>> | string>,
  mode?: 'import' | 'open',
  copyTo?: 'cachesDirectory' | 'documentDirectory',
  allowMultiSelection?: boolean,
  transitionStyle?: TransitionStyle,

  // TODO(tsflower): Add ModalPropsIOS to tsflower/subst/react-native and
  //   add macro to rewrite `Pick`.
  presentationStyle?: 'fullScreen' | 'pageSheet' | 'formSheet' | 'overFullScreen' | void,
  ...
};

declare export function pickDirectory<OS: SupportedPlatforms>(params?: {
  // TODO(tsflower): Add ModalPropsIOS to tsflower/subst/react-native and
  //   add macro to rewrite `Pick`.
  presentationStyle?: 'fullScreen' | 'pageSheet' | 'formSheet' | 'overFullScreen' | void,
  transitionStyle?: DocumentPickerOptions<OS>['transitionStyle'],
  ...
}): Promise<DirectoryPickerResponse | null>;

declare export function pickMultiple<OS: SupportedPlatforms>(
  opts?: DocumentPickerOptions<OS>,
): Promise<DocumentPickerResponse[]>;
declare export function pickSingle<OS: SupportedPlatforms>(
  opts?: DocumentPickerOptions<OS>,
): Promise<DocumentPickerResponse>;
declare export function pick<OS: SupportedPlatforms>(
  opts?: DocumentPickerOptions<OS>,
): Promise<DocumentPickerResponse[]>;
declare export function releaseSecureAccess(uris: Array<string>): Promise<void>;
export type NativeModuleErrorShape = Error & { code?: string, ... };
declare export function isCancel(err: mixed): boolean;
declare export function isInProgress(err: mixed): boolean;

declare var _default: {
  isCancel: typeof isCancel,
  releaseSecureAccess: typeof releaseSecureAccess,
  pickDirectory: typeof pickDirectory,
  pick: typeof pick,
  pickMultiple: typeof pickMultiple,
  pickSingle: typeof pickSingle,
  types:
    | Readonly<{
        +allFiles: '*/*',
        +audio: 'audio/*',
        +csv: 'text/csv',
        +doc: 'application/msword',
        +docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
        +images: 'image/*',
        +pdf: 'application/pdf',
        +plainText: 'text/plain',
        +ppt: 'application/vnd.ms-powerpoint',
        +pptx: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',
        +video: 'video/*',
        +xls: 'application/vnd.ms-excel',
        +xlsx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
        +zip: 'application/zip',
        ...
      }>
    | Readonly<{
        +allFiles: 'public.item',
        +audio: 'public.audio',
        +csv: 'public.comma-separated-values-text',
        +doc: 'com.microsoft.word.doc',
        +docx: 'org.openxmlformats.wordprocessingml.document',
        +images: 'public.image',
        +pdf: 'com.adobe.pdf',
        +plainText: 'public.plain-text',
        +ppt: 'com.microsoft.powerpoint.ppt',
        +pptx: 'org.openxmlformats.presentationml.presentation',
        +video: 'public.movie',
        +xls: 'com.microsoft.excel.xls',
        +xlsx: 'org.openxmlformats.spreadsheetml.sheet',
        +zip: 'public.zip-archive',
        ...
      }>
    | Readonly<{
        +allFiles: '*',
        +audio: '.3g2 .3gp .aac .adt .adts .aif .aifc .aiff .asf .au .m3u .m4a .m4b .mid .midi .mp2 .mp3 .mp4 .rmi .snd .wav .wax .wma',
        +csv: '.csv',
        +doc: '.doc',
        +docx: '.docx',
        +images: '.jpeg .jpg .png',
        +pdf: '.pdf',
        +plainText: '.txt',
        +ppt: '.ppt',
        +pptx: '.pptx',
        +video: '.mp4',
        +xls: '.xls',
        +xlsx: '.xlsx',
        +zip: '.zip .gz',
        ...
      }>,
  perPlatformTypes: {
    android: Readonly<{
      +allFiles: '*/*',
      +audio: 'audio/*',
      +csv: 'text/csv',
      +doc: 'application/msword',
      +docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
      +images: 'image/*',
      +pdf: 'application/pdf',
      +plainText: 'text/plain',
      +ppt: 'application/vnd.ms-powerpoint',
      +pptx: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',
      +video: 'video/*',
      +xls: 'application/vnd.ms-excel',
      +xlsx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
      +zip: 'application/zip',
      ...
    }>,
    ios: Readonly<{
      +allFiles: 'public.item',
      +audio: 'public.audio',
      +csv: 'public.comma-separated-values-text',
      +doc: 'com.microsoft.word.doc',
      +docx: 'org.openxmlformats.wordprocessingml.document',
      +images: 'public.image',
      +pdf: 'com.adobe.pdf',
      +plainText: 'public.plain-text',
      +ppt: 'com.microsoft.powerpoint.ppt',
      +pptx: 'org.openxmlformats.presentationml.presentation',
      +video: 'public.movie',
      +xls: 'com.microsoft.excel.xls',
      +xlsx: 'org.openxmlformats.spreadsheetml.sheet',
      +zip: 'public.zip-archive',
      ...
    }>,
    windows: Readonly<{
      +allFiles: '*',
      +audio: '.3g2 .3gp .aac .adt .adts .aif .aifc .aiff .asf .au .m3u .m4a .m4b .mid .midi .mp2 .mp3 .mp4 .rmi .snd .wav .wax .wma',
      +csv: '.csv',
      +doc: '.doc',
      +docx: '.docx',
      +images: '.jpeg .jpg .png',
      +pdf: '.pdf',
      +plainText: '.txt',
      +ppt: '.ppt',
      +pptx: '.pptx',
      +video: '.mp4',
      +xls: '.xls',
      +xlsx: '.xlsx',
      +zip: '.zip .gz',
      ...
    }>,
    macos: Readonly<{
      +allFiles: '*',
      +audio: '.3g2 .3gp .aac .adt .adts .aif .aifc .aiff .asf .au .m3u .m4a .m4b .mid .midi .mp2 .mp3 .mp4 .rmi .snd .wav .wax .wma',
      +csv: '.csv',
      +doc: '.doc',
      +docx: '.docx',
      +images: '.jpeg .jpg .png',
      +pdf: '.pdf',
      +plainText: '.txt',
      +ppt: '.ppt',
      +pptx: '.pptx',
      +video: '.mp4',
      +xls: '.xls',
      +xlsx: '.xlsx',
      +zip: '.zip .gz',
      ...
    }>,
    web: Readonly<{
      +allFiles: '*',
      +audio: '.3g2 .3gp .aac .adt .adts .aif .aifc .aiff .asf .au .m3u .m4a .m4b .mid .midi .mp2 .mp3 .mp4 .rmi .snd .wav .wax .wma',
      +csv: '.csv',
      +doc: '.doc',
      +docx: '.docx',
      +images: '.jpeg .jpg .png',
      +pdf: '.pdf',
      +plainText: '.txt',
      +ppt: '.ppt',
      +pptx: '.pptx',
      +video: '.mp4',
      +xls: '.xls',
      +xlsx: '.xlsx',
      +zip: '.zip .gz',
      ...
    }>,
    ...
  },
  ...
};

export default _default;
