/* @flow
 * @generated by TsFlower
 */
import type { Partial } from 'tsflower/subst/lib';

import {
  type NavigationAction,
  type ParamListBase,
  type NavigationState,
  type Router,
} from '@react-navigation/routers';

import { type NavigationEventEmitter } from './useEventEmitter';
import { type EventMapBase, type NavigationHelpers, type NavigationProp } from './types';

type Options<State: NavigationState<>> = {
  state: State,
  getState: () => State,
  navigation: NavigationHelpers<ParamListBase> &
    Partial<NavigationProp<ParamListBase, string, any, any, any>>,
  setOptions: (cb: (options: { [key: string]: { ... } }) => { [key: string]: { ... } }) => void,
  router: Router<State, NavigationAction>,
  emitter: NavigationEventEmitter<EventMapBase>,
  ...
};

type NavigationCache<State: NavigationState<>, ScreenOptions: { ... }> = {
  [key: string]: NavigationProp<ParamListBase, string, State, ScreenOptions>,
  ...
};
declare export default function useNavigationCache<
  State: NavigationState<>,
  ScreenOptions: { ... },
>(
  Options<State>,
): NavigationCache<State, ScreenOptions>;
export {};
